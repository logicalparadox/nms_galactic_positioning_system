# <% const Bios = Atlas.Config.Bios || {} %>

Dialog:
  - Id: <%= Atlas.Dialog('PL_SCAN') %>
    Text: <%= Atlas.Mod.LocKey('MENU_PQ_DESC') %>
    Options:
      - Name: <%= Atlas.Mod.LocKey('MENU_PQ_NAME_P') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('DS_P') %>

      - Name: <%= Atlas.Mod.LocKey('MENU_PQ_NAME_S') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`DS_S`) %>

      # - $Name: Complex Pattern Query...
      #   MarkInteractionComplete: true
      #   KeepOpen: true
      #   NextInteraction: <%= Atlas.Dialog(`PZ_P1`) %>

      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_BACK') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Config.DeepSpaceBackDialogId %>
        SelectedOnBackOut: true

  - Id: <%= Atlas.Dialog('DS_P') %>
    Text: <%= Atlas.Mod.LocKey('MENU_PQ_DESC_P') %>
    Options:
      - Name: <%= Atlas.Mod.LocKey('MENU_PQ_NAME_PB') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`PQ_P1`) %>

      - Name: <%= Atlas.Mod.LocKey('MENU_PQ_NAME_PR') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`PR_P1`) %>

      - Name: <%= Atlas.Mod.LocKey('MENU_PQ_NAME_PO') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`PO_P1`) %>

      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_BACK') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('PL_SCAN') %>
        SelectedOnBackOut: true

  - Id: <%= Atlas.Dialog('DS_S') %>
    Text: <%= Atlas.Mod.LocKey('MENU_PQ_DESC_S') %>
    Options:
      # Trade Economy scanning not working in game
      # - $Name: Wealthy by Economy Type...
      #   MarkInteractionComplete: true
      #   KeepOpen: true
      #   NextInteraction: <%= Atlas.Dialog(`PT_P1`) %>

      # <% let systemGenerics = Atlas.Config.DeepSpaceQuery.filter((r) => r.$ === 'SystemGenericQuery') %>
      # <% if (systemGenerics.length > 3) throw new Error('Too many SystemGenericQuery, redesign menu'); %>
      # <% systemGenerics.forEach((meta) => { %>

      # cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        Cost: <%= Atlas.Mod.Cost(`PQ${meta.Cost}`) %>
        DisplayCost: true
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Mod.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '0'
            Test: Equal

      # no cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Mod.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '1'
            Test: Equal

      # active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Cost: <%= Atlas.Mod.Cost(`PM${meta.ID}`) %>
        DisplayCost: true
        EnablingConditionTest: AnyFalse
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
      # <% }); // end system generics  %>

      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_BACK') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('PL_SCAN') %>
        SelectedOnBackOut: true

  # <% let queryTypes = { PlanetBiomeQuery: 'Q', PlanetResourceQuery: 'R', PlanetOutlierQuery: 'O', SystemTradeQuery: 'T' }; %>
  # <% let queryHome = { O: 'DS_P', Q: 'DS_P', R: 'DS_P', S: 'DS_S', T: 'DS_S' }; %>
  # <% Object.keys(queryTypes).forEach((typeKey) => { %>
  # <% let menuKey = queryTypes[typeKey]; %>
  # <% let queryList = Atlas.Config.DeepSpaceQuery.filter((r) => r.$ === typeKey); %>
  # <% Atlas.Tools.Paginate(queryList, 3, (items, page, totalPages) => { %>
  - Id: <%= Atlas.Dialog(`P${menuKey}_P${page}`) %>
    Text: <%= Atlas.Mod.LocKey(`P${menuKey}_DESC`) %>
    Options:
      # <% items.forEach((meta) => { %>

      # cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        Cost: <%= Atlas.Mod.Cost(`PQ${meta.Cost}`) %>
        DisplayCost: true
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Mod.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '0'
            Test: Equal

      # no cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Mod.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '1'
            Test: Equal

      # active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Cost: <%= Atlas.Mod.Cost(`PM${meta.ID}`) %>
        DisplayCost: true
        EnablingConditionTest: AnyFalse
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>

      # <% }); // end items for each %>
      #
      # <% if (page === totalPages) { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_HOME') %>
        NextInteraction: <%= Atlas.Dialog(queryHome[menuKey]) %>
        # <% } else { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_NEXT') %>
        NextInteraction: <%= Atlas.Dialog(`P${menuKey}_P${page + 1}`) %>
        # <% } %>
        MarkInteractionComplete: true
        SelectedOnBackOut: true
        KeepOpen: true
  # <% }); // end paginate %>
  # <% }); // end forEach queryType %>
