Dialog:
  - Id: <%= Atlas.Dialog('SBS_P1') %>
    TextAlien: <%= Atlas.Mod.LocKey('SCAN_EXACT_DESC') %>
    Options:
      - Name: <%= Atlas.Mod.LocKey('GRP_SVG_MENU') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('SVG_P1') %>
      - Name: <%= Atlas.Mod.LocKey('GRP_BLD_MENU') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('BLD_P1') %>
      - Name: <%= Atlas.Mod.LocKey('GRP_ANC_MENU') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('ANC_P1') %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_NEXT') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('SBS_P2') %>
        SelectedOnBackOut: true

  - Id: <%= Atlas.Dialog('SBS_P2') %>
    TextAlien: <%= Atlas.Mod.LocKey('SCAN_EXACT_DESC') %>
    Options:
      - Name: <%= Atlas.Mod.LocKey('GRP_SIG_MENU') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('SIG_P1') %>
      - Name: <%= Atlas.Mod.LocKey('GRP_UW_MENU') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog('UW_P1') %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_BACK') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Config.HomeDialogId %>
        SelectedOnBackOut: true

  # <% Object.keys(Atlas.Config.SearchGroups).forEach((groupKey, i) => { %>

  # The paginate tool allows for creating dynamic menus from an array.
  # Paginate(allItemsArray, itemsPerPage, (thisPageArray, pageIndex, totalPages))
  # - thisPageArray contains just the items for this page, use a forEach loop to create entries
  # - if pageIndex === totalPages then you are on the last page
  #
  # <% Atlas.Tools.Paginate(Atlas.Config.SearchGroups[groupKey].Events, 3, (eventKeys, p, t) => { %>
  - Id: <%= Atlas.Dialog(`${groupKey}_P${p}`) %>
    Text: <%= Atlas.Mod.LocKey(`GRP_${groupKey}_DESC`) %>
    Options:
      # iterate through items on this page
      # <% eventKeys.forEach((eventId) => { %>
      # <% const event = Atlas.Config.ScanEventTable.find((se) => se.ID === eventId); %>
      # <% const idx = Atlas.Config.ScanEventTable.indexOf(event); %>
      # <% ;[true, false].forEach((useCost) => { %>
      - Name: '<%= event.Menu || `BUILDING_${event.Name}_L` %>'
        # <% if (useCost) { %>
        Cost: <%= Atlas.Mod.Cost(event.Cost || 'SM') %>
        DisplayCost: true
        # <% } %>
        MarkInteractionComplete: true
        KeepOpen: false
        EnablingConditionTest: AnyFalse
        EnablingConditions:
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '<%= (useCost ? 1 : 0) %>'
            Test: Equal
        Rewards:
          - <%= Atlas.Reward(`FIX_${idx}`) %>
      # <% }); // end useCost loop %>
      # <% }); // end eventKey loop %>

      # check for last page
      # <% if (p === t) { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_HOME') %>
        NextInteraction: <%= Atlas.Dialog('SBS_P1') %>
        MarkInteractionComplete: true
        SelectedOnBackOut: true
        KeepOpen: true

      # <% } else { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_NEXT') %>
        NextInteraction: <%= Atlas.Dialog(`${groupKey}_P${p + 1}`) %>
        MarkInteractionComplete: true
        SelectedOnBackOut: true
        KeepOpen: true
      # <% } // end page check %>

  # <% }); // end search group paginate %>
  # <% }); // end search group keys %>
