# <% let allQueries = Atlas.Config.DeepSpaceQuery; %>

Costs:
  # <% allQueries.forEach((m) => { %>
  - Id: <%= Atlas.Cost(`PM${m.ID}`) %>
    DisplayCost: true
    MustAffordInCreative: true
    CannotAffordOSDMsg: MISSION_ACTIVE_OSD
    Cost:
      $: GcCostMissionComplete
      Cost: <%= m.MissionID %>
      TextOverride: MISSION_ACTIVE
  # <% }); %>

Rewards:
  # <% allQueries.forEach((m) => { %>
  - Id: <%= Atlas.Reward(`PM${m.ID}`) %>
    RewardChoice: GiveAll
    List:
      - $: GcRewardMission
        Mission: <%= m.MissionID %>
        SetAsSelected: true
        FailRewardIfMissionActive: true
  # <% }); %>

Dialog:
  - Id: <%= Atlas.Dialog('PL_SCAN') %>
    $Text: Deep Space Scanning <TRADEABLE>AVAILABLE<> <IMG>SLASH<> Select planetary query pattern...
    Options:
      - $Name: Biome Pattern Query...
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`PQ_P1`) %>
      - $Name: Resource Pattern Query...
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`PR_P1`) %>
      # - $Name: Complex Pattern Query...
      #   MarkInteractionComplete: true
      #   KeepOpen: true
      #   NextInteraction: <%= Atlas.Dialog(`PZ_P1`) %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_BACK') %>
        MarkInteractionComplete: true
        KeepOpen: true
        NextInteraction: <%= Atlas.Dialog(`UTIL`) %>
        SelectedOnBackOut: true

  # <% let typeRefs = { Biome: 'Q', Resource: 'R', Complex: 'Z' }; %>
  # <% Object.keys(typeRefs).forEach((typeKey) => { %>
  # <% let menuKey = typeRefs[typeKey]; %>
  # <% let queryList = Atlas.Config.DeepSpaceQuery.filter((r) => r.ID.charAt(0) === menuKey); %>
  # <% let pageCount = Math.ceil(queryList.length / 3); %>
  # <% for (let p = 1; p <= pageCount; p++) { %>
  - Id: <%= Atlas.Dialog(`P${menuKey}_P${p}`) %>
    Text: <%= Atlas.Mod.LocKey(`P${menuKey}_DESC`) %>
    Options:
      # <% let idx = (p - 1) * 3; %>
      # <% for (let i = 0; i < 3; i++) { %>
      # <% if (idx >= queryList.length) break; %>
      # <% const meta = queryList[idx]; %>

      # cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        Cost: <%= Atlas.Mod.Cost(`PQ${meta.Cost}`) %>
        DisplayCost: true
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '0'
            Test: Equal

      # no cost not active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Text: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_DESC`) %>
        MarkInteractionComplete: true
        KeepOpen: false
        Rewards:
          - <%= Atlas.Reward(`PM${meta.ID}`) %>
        EnablingConditionTest: AnyTrue
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>
          - $: GcMissionConditionStatLevel
            Stat: <%= Atlas.Stat('CFG_COST') %>
            Level: '1'
            Test: Equal

      # active
      - Name: <%= Atlas.Mod.LocKey(`PQ_${meta.ID}_MENU`) %>
        Cost: <%= Atlas.Cost(`PM${meta.ID}`) %>
        DisplayCost: true
        EnablingConditionTest: AnyFalse
        EnablingConditions:
          - $: GcMissionConditionIsMissionInProgress
            MissionID: <%= meta.MissionID %>

      # <% idx++; %>
      # <% } // end for i (idx of page) %>
      #
      # <% if (p === pageCount) { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_HOME') %>
        NextInteraction: <%= Atlas.Dialog('PL_SCAN') %>
        # <% } else { %>
      - Name: <%= Atlas.Mod.LocKey('MENU_OPT_NEXT') %>
        NextInteraction: <%= Atlas.Dialog(`P${menuKey}_P${p + 1}`) %>
        # <% } %>
        MarkInteractionComplete: true
        SelectedOnBackOut: true
        KeepOpen: true
  # <% } // end for pageCount %>
  # <% }); // end forEach %>
